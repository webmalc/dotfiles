- defaults:
    link:
      create: true
      relink: true
      force: true

- clean: []
- shell:
    # Add repositories
    - apt-add-repository "ppa:fish-shell/release-3" -y
    - apt-add-repository "ppa:papirus/papirus" -y
    - apt-add-repository "ppa:kelleyk/emacs" -y
    - apt update

    # Install packages
    - 
      command: "apt install -y dropbox steam terminator emacs26 chromium-browser vim rofi papirus-icon-theme conky-all lua5.3 python-bs4 neomutt lynx w3m urlview mailnag clang-format clang"
      stdin: true
      stdout: true
      stderr: true
    
    # Install packages
    - 
      command: "apt install -y python-setuptools python3-setuptools zipalign openjdk-8-jdk steam-devices cryfs odt2txt caca-utils atool poppler-utils mediainfo curl exuberant-ctags snapd silversearcher-ag ipython ipython3 keepassx python-pygments highlight atool libcaca-dev python-pip python3-pip python3-dev python3.7 python3.7-dev python3.8 python3.8-dev libpq-dev htop fish firefox vim-gnome redis postgresql vim memcached  virtualbox vagrant socat docker.io docker ansible xfce4-terminal taskwarrior stubby ecryptfs-utils cryptsetup mpd ncmpcpp mpc"
      stdin: true
      stdout: true
      stderr: true

    # Install packages
    # - 
    #   command: "apt install -y npm nodejs"
    #   stdin: true
    #   stdout: true
    #   stderr: true

    # Install translate-shell
    - 
      command: "wget git.io/trans; chmod +x ./trans; mv ./trans /usr/bin/trans"
      stdin: true
      stdout: true
      stderr: true

    # Install snap packages
    - 
      command: "snap install telegram-desktop"
      stdin: true
      stdout: true
      stderr: true

    # Install snap packages (classic)
    - 
      command: "snap install go --classic"
      stdin: true
      stdout: true
      stderr: true

    # Install python packages
    - 
      command: "pip install setuptools python-bidi chardet virtualfish json-rpc service_factory hy php ipdb wakatime"
      stdin: true
      stdout: true
      stderr: true
    - 
      command: "pip3 install thefuck platformio ptpython ranger-fm aiohttp"
      stdin: true
      stdout: true
      stderr: true

    # Install JS packages
    - 
      command: "npm install -g ionic jshint @angular/cli cross-env mocha less tern js-beautify eslint typescript tslint typescript-formatter eslint-config-google"
      stdin: true
      stdout: true
      stderr: true

    # Remove the unnecessary packages
    - 
      command: "bash -c 'apt purge -y rhythmbox* xplayer* thunderbird*'"
      stdin: true
      stdout: true
      stderr: true

    # Set config
    - [gpasswd -a mpd webmalc]
    - [gpasswd -a mpd audio]
    - [chsh -s /usr/bin/fish webmalc]
    - [chsh -s /usr/bin/fish]
    - [grep -qxF 'fs.inotify.max_user_watches=524288' /etc/sysctl.conf || echo 'fs.inotify.max_user_watches=524288' >> /etc/sysctl.conf]
    - [adduser webmalc docker]
    - [cp /home/webmalc/Projects/dotfiles/stubby/stubby.yml /etc/stubby/stubby.yml]
    - ['chown -R webmalc:webmalc /home/webmalc/*']
    - ['curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/master/scripts/99-platformio-udev.rules | tee /etc/udev/rules.d/99-platformio-udev.rules']
    - ['test -e /home/webmalc/.config/ranger/plugins/ranger_devicons || git clone https://github.com/alexanderjeurissen/ranger_devicons /home/webmalc/.config/ranger/plugins/ranger_devicons']

- link:
    /etc/pam.d/common-auth: pam.d/common-auth
    /etc/mpd.conf: mpd_service/mpd.conf
    /etc/pulse/default.pa: pulse/default.pa
